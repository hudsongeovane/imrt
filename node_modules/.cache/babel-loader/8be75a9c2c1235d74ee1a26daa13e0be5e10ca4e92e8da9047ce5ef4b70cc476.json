{"ast":null,"code":"var _jsxFileName = \"/Users/hmedeiros/react-study/imrt/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport FluenceMap from './FluenceMap.js';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form';\nimport { toHaveDisplayValue } from '@testing-library/jest-dom/dist/matchers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst algorithms = [{\n  value: 'bortfeld',\n  label: 'Bortfeld Algorithm'\n}, {\n  value: 'engel',\n  label: 'Engel Algorithm'\n}, {\n  value: 'gra',\n  label: 'GRA-SRA'\n}];\nfunction getRandomMatrix(rows, cols) {\n  const matrix = [];\n  for (let i = 0; i < rows; i++) {\n    const row = [];\n    for (let j = 0; j < cols; j++) {\n      const randomNum = Math.floor(Math.random() * 10); // Generates random number from 0 to 9\n      row.push(randomNum);\n    }\n    matrix.push(row);\n  }\n  return matrix;\n}\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.regenerateMatrix = () => {\n      this.setState({\n        matrix: getRandomMatrix(5, 5),\n        solution: null\n      });\n    };\n    this.selectAlgorithm = event => {\n      this.setState({\n        selectedAlgorithm: event.target.value\n      });\n    };\n    this.solve = () => {\n      console.log(this.state.selectedAlgorithm);\n    };\n    this.state = {\n      matrix: getRandomMatrix(5, 5),\n      selectedAlgorithm: '',\n      solution: null\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"introduction\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Leaf Sequencing Problem in IMRT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"In Intensity-Modulated Radiation Therapy (IMRT), the goal is to deliver the highest possible radiation dose to the tumor while minimizing the dose to surrounding healthy tissue. One way to achieve this is by using collimators with leaf pairs that can move independently to shape the radiation beam. The leaf sequencing problem is the task of determining the optimal sequence of leaf movements to achieve a desired radiation intensity profile. The prescribed dosis for an application can be represented as a matrix - called fluence map. Algorithms for this problem should decompose this matrix in 0-1 segments in which the ones in each row are consecutive.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose any algorithm e click below to solve the leaf sequencing problem.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(FluenceMap, {\n          matrix: this.state.matrix,\n          isSegment: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          align: \"right\",\n          className: \"button\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-dark\",\n            onClick: this.regenerateMatrix,\n            children: \"Regenerate Matrix\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select\",\n          children: /*#__PURE__*/_jsxDEV(Form.Select, {\n            onChange: this.selectAlgorithm,\n            value: this.state.selectedOption,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              selected: true,\n              children: \"Select an algorithm...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"bortfeld\",\n              children: \"Bortfeld Algorithm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"engel\",\n              children: \"Engel Algorithm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gra\",\n              children: \"GRA-SRA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          align: \"right\",\n          className: \"button\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-dark\",\n            onClick: this.solve,\n            children: \"Solve!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"solution\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fluencemap-container\",\n          children: \"2 * \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fluencemap-container\",\n          children: /*#__PURE__*/_jsxDEV(FluenceMap, {\n            matrix: this.state.matrix,\n            isSegment: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fluencemap-container\",\n          children: /*#__PURE__*/_jsxDEV(FluenceMap, {\n            matrix: this.state.matrix,\n            isSegment: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fluencemap-container\",\n          children: /*#__PURE__*/_jsxDEV(FluenceMap, {\n            matrix: this.state.matrix,\n            isSegment: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","FluenceMap","Button","Form","toHaveDisplayValue","jsxDEV","_jsxDEV","algorithms","value","label","getRandomMatrix","rows","cols","matrix","i","row","j","randomNum","Math","floor","random","push","App","Component","constructor","props","regenerateMatrix","setState","solution","selectAlgorithm","event","selectedAlgorithm","target","solve","console","log","state","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber","isSegment","align","variant","onClick","Select","onChange","selectedOption","disabled","selected"],"sources":["/Users/hmedeiros/react-study/imrt/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport FluenceMap from './FluenceMap.js'\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form';\nimport { toHaveDisplayValue } from '@testing-library/jest-dom/dist/matchers';\n\nconst algorithms = [\n  { value: 'bortfeld', label: 'Bortfeld Algorithm' },\n  { value: 'engel', label: 'Engel Algorithm' },\n  { value: 'gra', label: 'GRA-SRA' }\n]\n\nfunction getRandomMatrix(rows, cols) {\n  const matrix = [];\n  \n  for (let i = 0; i < rows; i++) {\n    const row = [];\n    for (let j = 0; j < cols; j++) {\n      const randomNum = Math.floor(Math.random() * 10); // Generates random number from 0 to 9\n      row.push(randomNum);\n    }\n    matrix.push(row);\n  }\n\n  return matrix;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      matrix: getRandomMatrix(5,5),\n      selectedAlgorithm: '',\n      solution: null,\n    };\n  }\n\n  regenerateMatrix = () => {\n    this.setState({matrix: getRandomMatrix(5,5), solution: null});\n  };\n\n  selectAlgorithm = (event) => {\n    this.setState({selectedAlgorithm: event.target.value});\n  }\n\n  solve = () => {\n    console.log(this.state.selectedAlgorithm);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='introduction'>\n          <h1>Leaf Sequencing Problem in IMRT</h1>\n            <p>\n              In Intensity-Modulated Radiation Therapy (IMRT), the goal is to\n              deliver the highest possible radiation dose to the tumor while\n              minimizing the dose to surrounding healthy tissue. One way to\n              achieve this is by using collimators with leaf pairs that can move\n              independently to shape the radiation beam. The leaf sequencing\n              problem is the task of determining the optimal sequence of leaf\n              movements to achieve a desired radiation intensity profile.\n\n              The prescribed dosis for an application can be represented as\n              a matrix - called fluence map. Algorithms for this problem should \n              decompose this matrix in 0-1 segments in which the ones in each row\n              are consecutive.\n            </p>\n            <p>\n              Choose any algorithm e click below to solve the leaf sequencing problem.\n            </p>\n\n        </div>\n        <div className='container'>\n            <FluenceMap matrix={this.state.matrix} isSegment={false} />\n            {/* <button className='button' onClick={this.regenerateMatrix}>\n              Regenerate matrix\n            </button> */}\n            <div align='right' className='button'>\n              <Button variant=\"outline-dark\" onClick={this.regenerateMatrix}>Regenerate Matrix</Button>\n            </div>\n            <div className='select'>\n              <Form.Select\n                onChange={this.selectAlgorithm}\n                value={this.state.selectedOption}\n              >\n                <option disabled selected>Select an algorithm...</option>\n                <option value=\"bortfeld\">Bortfeld Algorithm</option>\n                <option value=\"engel\">Engel Algorithm</option>\n                <option value=\"gra\">GRA-SRA</option>\n              </Form.Select>\n            </div>\n            <div align='right' className='button'>\n              <Button variant=\"outline-dark\" onClick={this.solve}>Solve!</Button>\n            </div>\n        </div>\n        <div className='solution'>\n            <div className='fluencemap-container'>2 * </div>\n            <div className='fluencemap-container'><FluenceMap matrix={this.state.matrix} isSegment={true}/></div>\n            <div className='fluencemap-container'><FluenceMap matrix={this.state.matrix} isSegment={true}/></div>\n            <div className='fluencemap-container'><FluenceMap matrix={this.state.matrix} isSegment={true}/></div>\n        </div>\n      </div>\n    )\n  }   \n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}